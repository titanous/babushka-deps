#!/usr/bin/env ruby
if ENV['GIT_DIR'] == '.'
  # this means the script has been called as a hook, not manually.
  # clear the GIT_DIR (which makes it default to .git) so
  # we can descend into the working copy dir;
  # if we don't then `git reset --hard` doesn't affect the working tree.
  Dir.chdir('..')
  ENV['GIT_DIR'] = nil
end

cmd = %(bash -c "[ -f /etc/profile ] && source /etc/profile; echo $PATH")
envpath = IO.popen(cmd, 'r') { |io| io.read.chomp }
ENV['PATH'] = envpath

# find out the current branch
head = `git symbolic-ref HEAD`.chomp
# abort if we're on a detached head
exit unless $?.success?

puts "\n\n++ Got deploy push to #{head}..."

oldrev = newrev = nil
null_ref = '0' * 40

# read the STDIN to detect if this push changed the current branch
while newrev.nil? and gets
  # each line of input is in form of "<oldrev> <newrev> <refname>"
  revs = $_.split
  oldrev, newrev = revs if head == revs.pop
end

# abort if there's no update, or in case the branch is deleted
if newrev.nil? or newrev == null_ref
  puts "++ No update, we're done here."
  exit
end

# update the working copy
`umask 002 && git reset --hard`

config = 'config/database.yml'
restart = 'tmp/restart.txt'
gemfile = 'Gemfile'

if oldrev == null_ref
  puts "++ First push, creating file structure..."
  # this is the first push; this branch was just created
  require 'fileutils'
  FileUtils.mkdir_p %w(tmp public)
  FileUtils.chmod 0775, %w(tmp public)
  FileUtils.touch restart
  FileUtils.chmod 0664, restart

  if File.exists?(gemfile)
    # run bundle install
    puts "++ Gemfile detected, installing gems with bundler..."
    system %(umask 002 && bundle install)
    puts "\n"
  end
else
  system %(.git/hooks/post-reset #{oldrev} #{newrev})
end
